services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - django
    expose:
      - "3000"
    volumes:
      - ./frontend/:/app
      - /app/node_modules
      - /app/.next

  # ws-server:
  #   container_name: ws-server
  #   build:
  #     context: ./frontend/ws-server
  #     dockerfile: Dockerfile
  #   restart: always
  #   depends_on:
  #     - frontend
  #   ports:
  #     - 6500:6500
  #   volumes:
  #     - ./frontend/ws-server/:/server
  #     - /server/node_modules

  postgres:
    container_name: postgres
    image: postgres:16.4
    restart: always
    env_file:
      - ./backend/.env.example
    volumes:
      # - /Users/miky/42mac/ft_transcendence/.dbdata:/var/lib/postgresql/data
      # - /Users/julzibot/goinfre/ft_transcendence/.dbdata:/var/lib/postgresql/data
      - /home/anloisea/goinfre/ft_transcendence/.dbdata:/var/lib/postgresql/data
    ports:
      - 5432:5432

  django:
    container_name: django
    build:
      context: ./backend/core
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    # command: gunicorn core.wsgi:application --bind 0.0.0.0:8000
    restart: always
    expose:
      - "8000"
    depends_on:
      - postgres
    volumes:
      - ./backend/core/:/app
      - ./backend/core/static/:/app/static/
    env_file:
      - ./backend/.env.example

  nginx:
    container_name: proxy
    image: nginx:1.27.1
    restart: unless-stopped
    depends_on:
      - django
      - frontend
    ports:
      - "8000:8000"
      - "3000:3000"
    volumes:
      - ./proxy/default.conf:/etc/nginx/conf.d/default.conf
      - ./backend/core/static/:/var/www/static/
      - ./backend/core/media/:/var/www/media/
      - ./proxy/certs/:/etc/ssl/certs/
