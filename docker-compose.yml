services:
  # frontend:
  #   container_name: frontend
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   restart: always
  #   depends_on: 
  #     - backend
  #   ports:
  #     - 3000:3000
  #   volumes: 
  #     - ./frontend/:/app
  #     - /app/node_modules
  #     - /app/.next
  
  # ws-server:
  #   container_name: ws-server
  #   build:
  #     context: ./frontend/ws-server
  #     dockerfile: Dockerfile
  #   restart: always
  #   ports:
  #     - 6500:6500
  #   volumes:
  #     - ./frontend/ws-server/:/server
  #     - /server/node_modules

  postgres:
    container_name: postgres
    image: postgres:16.4
    restart: always
    env_file:
      - ./backend/.env.example
    volumes:
      # - /Users/miky/42mac/ft_transcendence/.dbdata:/var/lib/postgresql/data
      # - /Users/julzibot/goinfre/ft_transcendence/.dbdata:/var/lib/postgresql/data
      - /home/anloisea/goinfre/ft_transcendence/.dbdata:/var/lib/postgresql/data
    ports:
      - 33066:5432


  django:
    container_name: django
    build:
      context: ./backend/core
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    restart: always
    ports:
      - 8000:8000
    depends_on:
      - postgres
    volumes:
      - ./backend/core/:/app
      - ./backend/core/static/:/app/static/
    env_file:
      - ./backend/.env.example

  nginx:
    container_name: nginx
    build:
      context: ./backend/server
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - django
    ports:
      - "8080:80"
      - "4443:443"
    volumes:
      - ./backend/server/default.conf:/etc/nginx/conf.d/default.conf
      - ./backend/core/static/:/var/www/html/

