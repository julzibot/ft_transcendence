services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - django
    expose:
      - ${FRONTEND_PORT}
    volumes:
      - ./frontend/:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NEXT_PUBLIC_BACKEND_PORT=${BACKEND_PORT}
      - NEXT_PUBLIC_FRONTEND_PORT=${FRONTEND_PORT}
      - NEXT_PUBLIC_SOCKET_PORT=${SOCKET_PORT}
      - NEXT_PUBLIC_SESSION_SECRET=${NEXT_PUBLIC_SESSION_SECRET}
      - NEXT_PUBLIC_FORTY_TWO_CLIENT_UID=${NEXT_PUBLIC_FORTY_TWO_CLIENT_UID}
      - NEXT_PUBLIC_FORTY_TWO_CLIENT_SECRET=${NEXT_PUBLIC_FORTY_TWO_CLIENT_SECRET}
      - NEXT_PUBLIC_API_URL=https://${DOMAIN_NAME}:${BACKEND_PORT}
      - NEXT_PUBLIC_DOMAIN=${DOMAIN_NAME}
      - NEXT_PUBLIC_URL=https://${DOMAIN_NAME}:${FRONTEND_PORT}

  ws-server:
    container_name: ws-server
    build:
      context: ./ws-server
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - frontend
    ports:
      - ${SOCKET_PORT}:${SOCKET_PORT}
    volumes:
      - ./ws-server/:/server
      - /server/node_modules
    environment:
      - SOCKET_PORT=${SOCKET_PORT}
      - DOMAIN_NAME=${DOMAIN_NAME}
      - FRONTEND_PORT=${FRONTEND_PORT}

  postgres:
    container_name: postgres
    image: postgres:16.4
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      # - /Users/miky/42mac/ft_transcendence/.dbdata:/var/lib/postgresql/data
      - /Users/julzibot/goinfre/ft_transcendence/.dbdata:/var/lib/postgresql/data
      # - /home/anloisea/goinfre/ft_transcendence/.dbdata:/var/lib/postgresql/data
    expose:
      - ${POSTGRES_PORT}

  django:
    container_name: django
    build:
      context: ./backend/core
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:${BACKEND_PORT}
    restart: always
    expose:
      - ${BACKEND_PORT}
    depends_on:
      - postgres
    volumes:
      - ./backend/core/:/app
      - ./backend/core/static/:/app/static/
      - ./backend/core/media/:/app/media/
    environment:
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DOMAIN_NAME=${DOMAIN_NAME}
      - BACKEND_PORT=${BACKEND_PORT}
      - FRONTEND_PORT=${FRONTEND_PORT}

  nginx:
    container_name: proxy
    image: nginx:1.27.1
    restart: unless-stopped
    depends_on:
      - django
      - frontend
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
      - ${FRONTEND_PORT}:${FRONTEND_PORT}
    volumes:
      - ./proxy/default.template:/etc/nginx/conf.d/default.template
      - ./proxy/entrypoint.sh:/entrypoint.sh
      - ./backend/core/static/:/var/www/static/
      - ./backend/core/media/:/var/www/media/
      - ./proxy/certs:/etc/ssl/certs
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME}
      - BACKEND_PORT=${BACKEND_PORT}
      - FRONTEND_PORT=${FRONTEND_PORT}
      - SOCKET_PORT=${SOCKET_PORT}
    entrypoint: [ "/bin/sh", "/entrypoint.sh" ]
